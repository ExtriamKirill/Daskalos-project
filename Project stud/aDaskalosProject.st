<?xml version="1.0"?>

<st-source>
<time-stamp>From VisualWorks® Personal Use Edition, Pre-Release 8.1 (oct14.3) of 24 октября 2014 г. on 30 апреля 2022 г. at 22:49:23</time-stamp>


<class>
<name>Znamka</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>date cvic stud vysledek predmet vyucujici </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Znamka class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes"resource for Daskalos"^((Core.Dictionary new) add: (#cvic -&gt; Core.Object); add: (#vysledek -&gt; Core.Number); add: (#stud -&gt; Core.Object); add: (#date -&gt; Core.Date); add: (#predmet -&gt; Core.Object); add: (#vyucujici -&gt; Core.Object); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Znamka</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="cvic">cvic"generated by Daskalos"     ^cvic</body>

<body package="DaskalosUserClasses" selector="cvic:">cvic: anObject"generated by Daskalos"     cvic := (self checkValue: anObject forVariable: #cvic)</body>

<body package="DaskalosUserClasses" selector="date">date"generated by Daskalos"     ^date</body>

<body package="DaskalosUserClasses" selector="date:">date: anObject"generated by Daskalos"     date := (self checkValue: anObject forVariable: #date)</body>

<body package="DaskalosUserClasses" selector="predmet">predmet"generated by Daskalos"     ^predmet</body>

<body package="DaskalosUserClasses" selector="predmet:">predmet: anObject"generated by Daskalos"     predmet := (self checkValue: anObject forVariable: #predmet)</body>

<body package="DaskalosUserClasses" selector="stud">stud"generated by Daskalos"     ^stud</body>

<body package="DaskalosUserClasses" selector="stud:">stud: anObject"generated by Daskalos"     stud := (self checkValue: anObject forVariable: #stud)</body>

<body package="DaskalosUserClasses" selector="vysledek">vysledek"generated by Daskalos"     ^vysledek</body>

<body package="DaskalosUserClasses" selector="vysledek:">vysledek: anObject"generated by Daskalos"     vysledek := (self checkValue: anObject forVariable: #vysledek)</body>

<body package="DaskalosUserClasses" selector="vyucujici">vyucujici"generated by Daskalos"     ^vyucujici</body>

<body package="DaskalosUserClasses" selector="vyucujici:">vyucujici: anObject"generated by Daskalos"     vyucujici := (self checkValue: anObject forVariable: #vyucujici)</body>
</methods>

<methods>
<class-id>Znamka</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize"generated by Daskalos"     super initialize.     date := nil.     cvic := nil.     stud := nil.     vysledek := nil.     predmet := nil.     vyucujici := nil.</body>
</methods>

<methods>
<class-id>Znamka</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="uspesnost">uspesnost	vysledek &lt; 4 ifTrue: [^'ano'] ifFalse: [^'ne']</body>
</methods>


<class>
<name>Cvicka</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>datum ucitel predmet </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Cvicka class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes"resource for Daskalos"^((Core.Dictionary new) add: (#datum -&gt; Core.Date); add: (#ucitel -&gt; Core.Object); add: (#predmet -&gt; Core.Object); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Cvicka</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="datum">datum"generated by Daskalos"     ^datum</body>

<body package="DaskalosUserClasses" selector="datum:">datum: anObject"generated by Daskalos"     datum := (self checkValue: anObject forVariable: #datum)</body>

<body package="DaskalosUserClasses" selector="predmet">predmet"generated by Daskalos"     ^predmet</body>

<body package="DaskalosUserClasses" selector="predmet:">predmet: anObject"generated by Daskalos"     predmet := (self checkValue: anObject forVariable: #predmet)</body>

<body package="DaskalosUserClasses" selector="ucitel">ucitel"generated by Daskalos"     ^ucitel</body>

<body package="DaskalosUserClasses" selector="ucitel:">ucitel: anObject"generated by Daskalos"     ucitel := (self checkValue: anObject forVariable: #ucitel)</body>
</methods>

<methods>
<class-id>Cvicka</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize"generated by Daskalos"     super initialize.     datum := nil.     ucitel := nil.     predmet := nil.</body>
</methods>


<class>
<name>Student</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>jmeno rokNarozeni kod </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Student class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes"resource for Daskalos"^((Core.Dictionary new) add: (#kod -&gt; Core.String); add: (#jmeno -&gt; Core.String); add: (#rokNarozeni -&gt; Core.Number); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Student</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="jmeno">jmeno"generated by Daskalos"     ^jmeno</body>

<body package="DaskalosUserClasses" selector="jmeno:">jmeno: anObject"generated by Daskalos"     jmeno := (self checkValue: anObject forVariable: #jmeno)</body>

<body package="DaskalosUserClasses" selector="kod">kod"generated by Daskalos"     ^kod</body>

<body package="DaskalosUserClasses" selector="kod:">kod: anObject"generated by Daskalos"     kod := (self checkValue: anObject forVariable: #kod)</body>

<body package="DaskalosUserClasses" selector="rokNarozeni">rokNarozeni"generated by Daskalos"     ^rokNarozeni</body>

<body package="DaskalosUserClasses" selector="rokNarozeni:">rokNarozeni: anObject"generated by Daskalos"     rokNarozeni := (self checkValue: anObject forVariable: #rokNarozeni)</body>
</methods>

<methods>
<class-id>Student</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize"generated by Daskalos"     super initialize.     jmeno := nil.     rokNarozeni := nil.     kod := nil.</body>
</methods>

<methods>
<class-id>Student</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="dospely">dospely	self vek &gt; 17 ifTrue: [^'ano'] ifFalse: [^'ne']</body>

<body package="DaskalosUserClasses" selector="vek">vek	^2022 - rokNarozeni</body>
</methods>


<class>
<name>Ucitel</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>jmeno mistnost odbornost </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Ucitel class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes"resource for Daskalos"^((Core.Dictionary new) add: (#odbornost -&gt; Core.String); add: (#jmeno -&gt; Core.String); add: (#mistnost -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Ucitel</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="jmeno">jmeno"generated by Daskalos"     ^jmeno</body>

<body package="DaskalosUserClasses" selector="jmeno:">jmeno: anObject"generated by Daskalos"     jmeno := (self checkValue: anObject forVariable: #jmeno)</body>

<body package="DaskalosUserClasses" selector="mistnost">mistnost"generated by Daskalos"     ^mistnost</body>

<body package="DaskalosUserClasses" selector="mistnost:">mistnost: anObject"generated by Daskalos"     mistnost := (self checkValue: anObject forVariable: #mistnost)</body>

<body package="DaskalosUserClasses" selector="odbornost">odbornost"generated by Daskalos"     ^odbornost</body>

<body package="DaskalosUserClasses" selector="odbornost:">odbornost: anObject"generated by Daskalos"     odbornost := (self checkValue: anObject forVariable: #odbornost)</body>
</methods>

<methods>
<class-id>Ucitel</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize"generated by Daskalos"     super initialize.     jmeno := nil.     mistnost := nil.     odbornost := nil.</body>
</methods>


<class>
<name>Predmet</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>nazev kod ucit </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Predmet class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes"resource for Daskalos"^((Core.Dictionary new) add: (#kod -&gt; Core.String); add: (#ucit -&gt; Core.Object); add: (#nazev -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Predmet</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="kod">kod"generated by Daskalos"     ^kod</body>

<body package="DaskalosUserClasses" selector="kod:">kod: anObject"generated by Daskalos"     kod := (self checkValue: anObject forVariable: #kod)</body>

<body package="DaskalosUserClasses" selector="nazev">nazev"generated by Daskalos"     ^nazev</body>

<body package="DaskalosUserClasses" selector="nazev:">nazev: anObject"generated by Daskalos"     nazev := (self checkValue: anObject forVariable: #nazev)</body>

<body package="DaskalosUserClasses" selector="ucit">ucit"generated by Daskalos"     ^ucit</body>

<body package="DaskalosUserClasses" selector="ucit:">ucit: anObject"generated by Daskalos"     ucit := (self checkValue: anObject forVariable: #ucit)</body>
</methods>

<methods>
<class-id>Predmet</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize"generated by Daskalos"     super initialize.     nazev := nil.     kod := nil.     ucit := nil.</body>
</methods>


</st-source>
